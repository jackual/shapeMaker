#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Distance", "Clouds", "Timeline", "Focus", "Thanos", "Group", "Water", "Vista"]
    def Material "Distance"
    {
        float inputs:deform = 0 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-101.42308, -317.2587)
                    int stackingOrderInSubgraph = 866
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Distance/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1236.4226, -16.321669)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1454

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color.connect = </Root/Distance/Combine3.outputs:out>
            bool inputs:hasPremultipliedAlpha = 0
            float inputs:opacity = 1
            float inputs:opacityThreshold = 0
            token outputs:out
            float2 ui:nodegraph:node:pos = (926.1179, 40.506454)
            int ui:nodegraph:node:stackingOrder = 1454
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            string inputs:space = "model"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-497.19922, 90.62891)
            int ui:nodegraph:node:stackingOrder = 611
        }

        def Shader "TransformVector"
        {
            uniform token info:id = "ND_transformvector_vector3"
            string inputs:fromspace = "model"
            float3 inputs:in.connect = </Root/Distance/Position.outputs:out>
            string inputs:tospace = "world"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-283.0625, 114.86328)
            int ui:nodegraph:node:stackingOrder = 352
        }

        def Shader "Separate3"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/Distance/Remap.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (-75.33203, -26.007812)
            int ui:nodegraph:node:stackingOrder = 497
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/Distance/SmoothStep.outputs:out>
            float inputs:in2.connect = </Root/Distance/SmoothStep_1.outputs:out>
            float inputs:in3.connect = </Root/Distance/SmoothStep_2.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (699.77026, 2.9830115)
            int ui:nodegraph:node:stackingOrder = 1454
        }

        def Shader "Remap"
        {
            uniform token info:id = "ND_remap_vector3"
            float3 inputs:in.connect = </Root/Distance/TransformVector.outputs:out>
            float3 inputs:inhigh = (0.5, 0.5, 0.5)
            float3 inputs:inlow = (-0.5, -0.5, -0.5)
            float3 inputs:outhigh = (1, 1, 1)
            float3 inputs:outlow = (0, 0, 0)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-338.2337, -80.15239)
            int ui:nodegraph:node:stackingOrder = 874
        }

        def Shader "Range"
        {
            uniform token info:id = "ND_range_float"
            bool inputs:doclamp = 1
            float inputs:gamma
            float inputs:in.connect = </Root/Distance/Remap_1.outputs:out>
            float inputs:inhigh
            float inputs:inlow
            float inputs:outhigh
            float inputs:outlow
            float outputs:out
            float2 ui:nodegraph:node:pos = (205.4306, -126.02997)
            int ui:nodegraph:node:stackingOrder = 1267
        }

        def Shader "SmoothStep"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high = 1.1
            float inputs:in.connect = </Root/Distance/Range.outputs:out>
            float inputs:low = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (417.29303, -160.48401)
            int ui:nodegraph:node:stackingOrder = 1262
        }

        def Shader "Range_1"
        {
            uniform token info:id = "ND_range_float"
            bool inputs:doclamp = 1
            float inputs:gamma
            float inputs:in.connect = </Root/Distance/Remap_1.outputs:out>
            float inputs:inhigh
            float inputs:inlow
            float inputs:outhigh = 0.8
            float inputs:outlow
            float outputs:out
            float2 ui:nodegraph:node:pos = (201.99466, 107.47766)
            int ui:nodegraph:node:stackingOrder = 1471
        }

        def Shader "SmoothStep_1"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high = 1.3
            float inputs:in.connect = </Root/Distance/Range_1.outputs:out>
            float inputs:low = 0.3
            float outputs:out
            float2 ui:nodegraph:node:pos = (425.15237, 128.9485)
            int ui:nodegraph:node:stackingOrder = 1258
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Range_2"
        {
            uniform token info:id = "ND_range_float"
            bool inputs:doclamp = 1
            float inputs:gamma
            float inputs:in.connect = </Root/Distance/Remap_1.outputs:out>
            float inputs:inhigh
            float inputs:inlow
            float inputs:outhigh
            float inputs:outlow
            float outputs:out
            float2 ui:nodegraph:node:pos = (213.82417, 355.04987)
            int ui:nodegraph:node:stackingOrder = 1265
        }

        def Shader "SmoothStep_2"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high
            float inputs:in.connect = </Root/Distance/Range_2.outputs:out>
            float inputs:low = 0
            float outputs:out
            float2 ui:nodegraph:node:pos = (438.99704, 359.32416)
            int ui:nodegraph:node:stackingOrder = 1245
        }

        def Shader "Noise3D"
        {
            uniform token info:id = "ND_noise3d_vector3FA"
            float inputs:amplitude = 0
            float inputs:amplitude.connect = </Root/Distance.inputs:deform>
            float inputs:pivot = 0
            float3 inputs:position
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (141.10635, -375.52298)
            int ui:nodegraph:node:stackingOrder = 862
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:pivot"]
        }

        def Shader "CameraPosition"
        {
            uniform token info:id = "ND_realitykit_cameraposition_vector3"
            string inputs:space = "model"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-936.3541, -145.67238)
            int ui:nodegraph:node:stackingOrder = 1382
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "TransformVector_1"
        {
            uniform token info:id = "ND_transformvector_vector3"
            string inputs:fromspace = "model"
            float3 inputs:in.connect = </Root/Distance/CameraPosition.outputs:out>
            string inputs:tospace = "world"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-672.22235, -56.03222)
            int ui:nodegraph:node:stackingOrder = 1382
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector3"
            float3 inputs:in1.connect = </Root/Distance/TransformVector_1.outputs:out>
            float3 inputs:in2.connect = </Root/Distance/TransformVector.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-816.01074, 40.04307)
            int ui:nodegraph:node:stackingOrder = 1276
        }

        def Shader "Magnitude"
        {
            uniform token info:id = "ND_magnitude_vector3"
            float3 inputs:in.connect = </Root/Distance/Subtract.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-740.7235, 137.61052)
            int ui:nodegraph:node:stackingOrder = 1457
        }

        def Shader "Remap_1"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/Distance/Magnitude.outputs:out>
            float inputs:inhigh = 5
            float inputs:inlow = 0
            float inputs:outhigh
            float outputs:out
            float2 ui:nodegraph:node:pos = (-147.2502, 335.73782)
            int ui:nodegraph:node:stackingOrder = 1468
        }
    }

    def Material "Clouds"
    {
        float inputs:speed = 0.2 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-630.13715, 206.5862)
                    int stackingOrderInSubgraph = 419
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Clouds/PBRSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (905.96326, -41.66596)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 61

        def Shader "PBRSurface"
        {
            uniform token info:id = "ND_realitykit_pbr_surfaceshader"
            color3f inputs:baseColor.connect = </Root/Clouds/Mix.outputs:out>
            color3f inputs:emissiveColor
            bool inputs:hasPremultipliedAlpha
            float3 inputs:normal
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (595.20624, -115.458466)
            int ui:nodegraph:node:stackingOrder = 138
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg = (0.46202266, 0.8382837, 1) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:fg = (0.999996, 1, 1) (
                colorSpace = "srgb_texture"
            )
            float inputs:mix.connect = </Root/Clouds/Abs.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (328.4826, -104.662094)
            int ui:nodegraph:node:stackingOrder = 411
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:bg"]
        }

        def Shader "Fractal3D"
        {
            uniform token info:id = "ND_fractal3d_float"
            float inputs:amplitude = 5
            float inputs:diminish
            float inputs:lacunarity
            int inputs:octaves = 5
            float3 inputs:position.connect = </Root/Clouds/Add_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-182.9292, -43.088097)
            int ui:nodegraph:node:stackingOrder = 418
        }

        def Shader "Abs"
        {
            uniform token info:id = "ND_absval_float"
            float inputs:in.connect = </Root/Clouds/Multiply_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (145.15747, 65.08931)
            int ui:nodegraph:node:stackingOrder = 409
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-621.1935, 132.05597)
            int ui:nodegraph:node:stackingOrder = 232
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-663.2697, 67.00195)
            int ui:nodegraph:node:stackingOrder = 394
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector3FA"
            float3 inputs:in1.connect = </Root/Clouds/Position.outputs:out>
            float inputs:in2.connect = </Root/Clouds/Multiply.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-447.00885, 96.23961)
            int ui:nodegraph:node:stackingOrder = 420
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Clouds/Time.outputs:out>
            float inputs:in2 = 0.5
            float inputs:in2.connect = </Root/Clouds.inputs:speed>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-465.65942, 159.27495)
            int ui:nodegraph:node:stackingOrder = 233
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Clouds/Fractal3D.outputs:out>
            float inputs:in2.connect = </Root/Clouds/Fractal3D_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (23.605005, -20.640003)
            int ui:nodegraph:node:stackingOrder = 392
        }

        def Shader "Fractal3D_1"
        {
            uniform token info:id = "ND_fractal3d_float"
            float inputs:amplitude
            float inputs:diminish
            float inputs:lacunarity
            int inputs:octaves = 5
            float3 inputs:position.connect = </Root/Clouds/Add.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-178.51782, 180.7179)
            int ui:nodegraph:node:stackingOrder = 386
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Clouds/Position.outputs:out>
            float3 inputs:in2 = (0.5, 0.5, 0.5)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-428.9041, -52.376358)
            int ui:nodegraph:node:stackingOrder = 412
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_vector3"
            float3 inputs:in1.connect = </Root/Clouds/Multiply_2.outputs:out>
            float3 inputs:in2.connect = </Root/Clouds/Multiply_3.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-344.18994, -10.527837)
            int ui:nodegraph:node:stackingOrder = 520
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Clouds/Add.outputs:out>
            float3 inputs:in2 = (0.5, 0.5, 0.5)
            float3 inputs:in2.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-352.0397, 55.473232)
            int ui:nodegraph:node:stackingOrder = 521
        }
    }

    def RealityKitTimeline "Timeline"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 30
                uniform token info:id = "1605AFD9-E5C5-428E-9F40-F7A54D03D3B1"
                float revolutions = 10
                double startTime = 0
                rel target = </Root/Group/Sphere_1>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def Material "Focus"
    {
        token outputs:mtlx:surface.connect = </Root/Focus/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:node:pos = (241.72952, -28.669357)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (293.76633, 199.47968)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 574

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 1
            color3f inputs:color.connect = </Root/Focus/Surface_Color.outputs:out>
            bool inputs:hasPremultipliedAlpha = 0
            float inputs:opacity.connect = </Root/Focus/Multiply.outputs:out>
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (43.032238, 208.53345)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 749
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:hasPremultipliedAlpha", "inputs:color"]
        }

        def Shader "Normal"
        {
            uniform token info:id = "ND_normal_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-905.84955, 173.50949)
            float2 ui:nodegraph:node:size = (128.5, 40)
            int ui:nodegraph:node:stackingOrder = 719
        }

        def Shader "DotProduct"
        {
            uniform token info:id = "ND_dotproduct_vector3"
            float3 inputs:in1.connect = </Root/Focus/ViewDirection.outputs:out>
            float3 inputs:in2.connect = </Root/Focus/Normal.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-718.1693, 130.29608)
            float2 ui:nodegraph:node:size = (153.5, 53)
            int ui:nodegraph:node:stackingOrder = 719
        }

        def Shader "ViewDirection"
        {
            uniform token info:id = "ND_realitykit_viewdirection_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-948.5562, 89.2113)
            float2 ui:nodegraph:node:size = (210, 53)
            int ui:nodegraph:node:stackingOrder = 719
        }

        def Shader "Oneminus"
        {
            uniform token info:id = "ND_realitykit_oneminus_float"
            float inputs:in.connect = </Root/Focus/DotProduct.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-524.17914, 117.69922)
            float2 ui:nodegraph:node:size = (158, 109)
            int ui:nodegraph:node:stackingOrder = 719
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/Focus/Oneminus.outputs:out>
            float inputs:in2 = 3
            float outputs:out
            float2 ui:nodegraph:node:pos = (-337.77948, 161.64749)
            float2 ui:nodegraph:node:size = (123.5, 40)
            int ui:nodegraph:node:stackingOrder = 719
        }

        def Shader "Surface_Color"
        {
            uniform token info:id = "ND_constant_color3"
            color3f inputs:value = (0.999996, 1, 1) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-179.51294, 106.402756)
            float2 ui:nodegraph:node:size = (175, 53)
            int ui:nodegraph:node:stackingOrder = 750
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-518.5156, -23.84375)
            int ui:nodegraph:node:stackingOrder = 770
        }

        def Shader "Modulo"
        {
            uniform token info:id = "ND_modulo_float"
            float inputs:in1.connect = </Root/Focus/Multiply_1.outputs:out>
            float inputs:in2 = 3.43
            float outputs:out
            float2 ui:nodegraph:node:pos = (-241.64844, 9.375)
            int ui:nodegraph:node:stackingOrder = 761
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Focus/Power.outputs:out>
            float inputs:in2.connect = </Root/Focus/Modulo.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-239.73438, 195.35938)
            int ui:nodegraph:node:stackingOrder = 765
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Focus/Time.outputs:out>
            float inputs:in2 = 7
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (-367.18402, -17.676422)
            int ui:nodegraph:node:stackingOrder = 771
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
        }
    }

    def Material "Thanos"
    {
        token outputs:mtlx:surface.connect = </Root/Thanos/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:node:pos = (-333.14496, 128.34485)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (73.109436, 516.9398)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 843

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat
            float inputs:clearcoatRoughness = 0.01
            color3f inputs:diffuseColor = (0, 0, 0) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:emissiveColor.connect = </Root/Thanos/Combine3_1.outputs:out>
            float inputs:ior
            float inputs:metallic
            float3 inputs:normal
            float inputs:occlusion
            float inputs:opacity.connect = </Root/Thanos/Separate4.outputs:outa>
            float inputs:opacityThreshold
            float inputs:roughness = 1
            token outputs:out
            float2 ui:nodegraph:node:pos = (-133.13495, 400.09323)
            float2 ui:nodegraph:node:size = (159.5, 307)
            int ui:nodegraph:node:stackingOrder = 1004
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced"]
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Thanos/Sin.outputs:out>
            float inputs:in2 = 0
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1318.036, 375.86105)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1545.5695, 367.14188)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/Thanos/Add.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1244.163, 384.89664)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Thanos/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1417.6028, 366.98)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Noise2D"
        {
            uniform token info:id = "ND_noise2d_float"
            float inputs:amplitude
            float inputs:pivot
            float2 inputs:texcoord.connect = </Root/Thanos/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1072.235, 215.11006)
            float2 ui:nodegraph:node:size = (148.5, 145)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1407.5166, 240.57834)
            float2 ui:nodegraph:node:size = (180.5, 53)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/Thanos/Texcoord.outputs:out>
            float2 inputs:in2 = (30, 30)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1239.9606, 242.75264)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Ifgreater_1"
        {
            uniform token info:id = "ND_ifgreater_color4"
            color4f inputs:in1.connect = </Root/Thanos/Ifgreater_2.outputs:out>
            color4f inputs:in2.connect = </Root/Thanos/Base_Color.outputs:out>
            float inputs:value1.connect = </Root/Thanos/Noise2D.outputs:out>
            float inputs:value2.connect = </Root/Thanos/Divide.outputs:out>
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-652.7713, 539.6466)
            float2 ui:nodegraph:node:size = (113.5, 163)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Image"
        {
            uniform token info:id = "ND_image_color4"
            asset inputs:file = @TextureImages/artist_workshop_1k.heic@
            string inputs:filtertype
            string inputs:vaddressmode
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-1532.7118, 531.7095)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1006
        }

        def Shader "Separate4"
        {
            uniform token info:id = "ND_separate4_color4"
            color4f inputs:in.connect = </Root/Thanos/Ifgreater_1.outputs:out>
            float outputs:outa
            float outputs:outb
            float outputs:outg
            float outputs:outr
            float2 ui:nodegraph:node:pos = (-510.02136, 615.5495)
            float2 ui:nodegraph:node:size = (115.5, 163)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Combine3_1"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/Thanos/Separate4.outputs:outr>
            float inputs:in2.connect = </Root/Thanos/Separate4.outputs:outg>
            float inputs:in3.connect = </Root/Thanos/Separate4.outputs:outb>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-340.0534, 365.98615)
            float2 ui:nodegraph:node:size = (157, 54)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Base_Color"
        {
            uniform token info:id = "ND_constant_color4"
            color4f inputs:value = (0, 0, 0, 0) (
                colorSpace = "srgb_texture"
            )
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-1294.3197, 745.685)
            float2 ui:nodegraph:node:size = (157, 53)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Ifgreater_2"
        {
            uniform token info:id = "ND_ifgreater_color4"
            color4f inputs:in1.connect = </Root/Thanos/Image.outputs:out>
            color4f inputs:in2.connect = </Root/Thanos/Line_Color.outputs:out>
            float inputs:value1.connect = </Root/Thanos/Noise2D.outputs:out>
            float inputs:value2.connect = </Root/Thanos/Add_1.outputs:out>
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-830.59393, 277.5717)
            float2 ui:nodegraph:node:size = (117, 163)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Thanos/Divide.outputs:out>
            float inputs:in2 = 0.05
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1086.3646, 385.87546)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1004
        }

        def Shader "Line_Color"
        {
            uniform token info:id = "ND_constant_color4"
            color4f inputs:value = (0.83060277, 0.9575687, 1, 1) (
                colorSpace = "srgb_texture"
            )
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-1288.5363, 678.02124)
            float2 ui:nodegraph:node:size = (152.5, 53)
            int ui:nodegraph:node:stackingOrder = 1004
        }
    }

    def Xform "Group" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (2, 2, 2)
        float3 xformOp:translate = (-0.10011333, 1.2145722, -0.18426609)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Sphere" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Clouds> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.16
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.374245, 0.19053279)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Sphere "Sphere_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Clouds> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.16
            float2 ui:nodegraph:node:pos = (28.774052, 159.42159)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (2.3469329e-7, 1.3062519, 0.17596781)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Sphere "Sphere_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Clouds> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.16
            float2 ui:nodegraph:node:pos = (28.774052, 159.42159)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.08893922, -0.15530014, 0.19053279)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Sphere "Sphere_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Clouds> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.16
            float2 ui:nodegraph:node:pos = (48.77405, 179.42159)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -0.63718253, 0.19053279)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Material "Water"
    {
        token outputs:mtlx:surface.connect = </Root/Water/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:node:pos = (-732.80115, 461.39752)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (2470.829, -169.42798)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2108

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoatRoughness
            color3f inputs:diffuseColor = (0, 0, 0) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:emissiveColor.connect = </Root/Water/Image.outputs:out>
            float inputs:ior
            float inputs:occlusion
            float inputs:roughness = 0.8
            token outputs:out
            float2 ui:nodegraph:node:pos = (2245.829, -169.42798)
            float2 ui:nodegraph:node:size = (159.5, 307)
            int ui:nodegraph:node:stackingOrder = 2108
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced"]
        }

        def Shader "Image"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            asset inputs:file = @TextureImages/artist_workshop_1k.heic@
            string inputs:filtertype
            float2 inputs:texcoord.connect = </Root/Water/Add.outputs:out>
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2002.7822, -166.63412)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 2113
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1023.35126, -492.40564)
            float2 ui:nodegraph:node:size = (180.5, 53)
            int ui:nodegraph:node:stackingOrder = 1853
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/Water/Texcoord.outputs:out>
            float2 inputs:in2 = (2, 2)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1948.6447, -298.08093)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1892
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/Multiply.outputs:out>
            float2 inputs:in2 = (1, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1866.3074, -289.12283)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1893
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/Water/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/Water/Combine2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1233.7485, -245.87006)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2108
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1687.3575, 902.5558)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1789
        }

        def Shader "Multiply_17"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_3.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (851.58734, 886.0304)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "numWaves_3"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-464.26978, 635.4833)
            float2 ui:nodegraph:node:size = (167, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "pos_1"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0, 0)
            float2 inputs:value.connect = </Root/Water/pos_0.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-758.3999, 723.04443)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Sin_3"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_24.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (775.6291, 1014.93994)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_23"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_10.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (637.2999, 670.9429)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_26"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_16.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (528.07007, 438.11395)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "t_1"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0
            float inputs:value.connect = </Root/Water/t_0.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-752.6873, 794.6367)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "numWaves_2"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-468.61023, 983.7842)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Divide_2"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_8.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (706.9491, 440.37653)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "center_2"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (-0.5, 0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-462.61084, 1053.0068)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_24"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_9.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (632.9594, 1019.2438)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "freq_3"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-476.82623, 911.69946)
            float2 ui:nodegraph:node:size = (126.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_28"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_3.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (289.65433, 653.45703)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "center_3"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0.5, -0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-458.2704, 704.70593)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Exp_2"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (18.385529, 538.6362)
            float2 ui:nodegraph:node:size = (123, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_22"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_1.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (462.5111, 1067.5846)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Divide_3"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_12.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (702.6086, 788.67737)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_19"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_2.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (855.92786, 537.7295)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Subtract_4"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_1.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_3.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-316.62256, 541.0676)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_8"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_26.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (618.8419, 439.25433)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Subtract_3"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_1.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-320.96298, 889.3684)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_10"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_15.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_27.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (556.7198, 664.4807)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_15"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_2.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_28.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (461.84875, 613.2456)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_16"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_2.outputs:out>
            float inputs:in2.connect = </Root/Water/d_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (441.69098, 438.36115)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Magnitude_2"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-158.15193, 541.125)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_25"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_2.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (285.31387, 1001.7578)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Magnitude_3"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-162.4924, 889.4258)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_12"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_18.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (614.5014, 787.5552)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_11"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_3.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (127.438156, 892.2517)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_27"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_1.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (466.85162, 719.2838)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_20"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_3.outputs:out>
            float inputs:in2.connect = </Root/Water/d_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (437.35046, 786.662)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_18"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_20.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (523.72955, 786.4148)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Multiply_21"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_3.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_25.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (457.50824, 961.5465)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Exp_3"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (14.045074, 886.937)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "d_3"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_11.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (272.6186, 892.8613)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "d_2"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (276.95905, 544.5604)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_7"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_2.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (131.77861, 543.9508)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Sin_2"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_23.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (779.9696, 666.63916)
            float2 ui:nodegraph:node:size = (121.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Add_9"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_21.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_22.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (552.3793, 1012.7816)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "freq_2"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-472.48578, 563.39856)
            float2 ui:nodegraph:node:size = (126.5, 53)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "pos_0"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0, 0)
            float2 inputs:value.connect = </Root/Water/Subtract.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1381.9432, 798.9595)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1580
        }

        def Shader "t_0"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0
            float inputs:value.connect = </Root/Water/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1371.5383, 891.81616)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 1580
        }

        def Shader "Subtract_5"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_0.outputs:out>
            float2 inputs:in2 = (0.01, 0)
            float2 inputs:in2.connect = None
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1205.5564, 487.85333)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1894
        }

        def Shader "Subtract_6"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/Water/Add_25.outputs:out>
            float inputs:in2.connect = </Root/Water/Add_26.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1174.169, 330.03076)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1647
        }

        def Shader "Magnitude_6"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_9.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-220.92711, 1667.1698)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_17"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_7.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (96.885765, 2394.462)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_37"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_35.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (469.63535, 1215.858)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "pos_2"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0, 0)
            float2 inputs:value.connect = </Root/Water/pos_0.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-788.9523, 2225.2546)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "freq_4"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-530.9205, 1341.1426)
            float2 ui:nodegraph:node:size = (126.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_7"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/Water/Add_27.outputs:out>
            float inputs:in2.connect = </Root/Water/Add_28.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1143.6166, 1832.2411)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_45"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_23.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (602.40704, 2521.454)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_22"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_44.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_32.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (493.94455, 1790.5256)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_18"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_46.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_36.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (526.1674, 2166.691)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_35"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_4.outputs:out>
            float inputs:in2.connect = </Root/Water/d_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (383.25626, 1216.1052)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_15"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_37.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (560.4072, 1216.9984)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "center_5"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0.5, -0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-488.82278, 2206.9163)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_14"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_6.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (69.00344, 1669.9957)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_21"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_4.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (101.22622, 2046.1611)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_38"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_47.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (497.51767, 1940.3242)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_50"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_7.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (226.87917, 1779.5018)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_52"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_5.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (259.10193, 2155.6672)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_46"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_5.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_52.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (431.29636, 2115.4558)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_13"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_48.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (556.0667, 1565.2992)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "freq_6"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-535.2609, 1689.4435)
            float2 ui:nodegraph:node:size = (126.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "d_7"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_14.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (214.18388, 1670.6053)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Exp_6"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-44.38964, 1664.681)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_48"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_39.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (465.29483, 1564.1588)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Magnitude_5"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_11.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-216.58664, 1318.869)
            float2 ui:nodegraph:node:size = (167, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "center_4"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (-0.5, 0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-521.04553, 1830.7509)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "freq_5"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-507.37863, 2413.9097)
            float2 ui:nodegraph:node:size = (126, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_42"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_22.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (574.5247, 1796.9878)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Exp_7"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-16.507315, 2389.1472)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Divide_10"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_15.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (648.5144, 1218.1206)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_47"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_5.outputs:out>
            float inputs:in2.connect = </Root/Water/d_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (411.13858, 1940.5714)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "numWaves_6"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-522.70447, 1413.2273)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_33"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_10.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (797.49316, 1315.4736)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_8"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_2.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_6.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-351.51538, 2391.5786)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Magnitude_7"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_10.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-188.70432, 2043.3353)
            float2 ui:nodegraph:node:size = (167, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Sin_6"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_31.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (721.5349, 1444.3832)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_49"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_3.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (408.4169, 1497.0278)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_53"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_2.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (431.9587, 2569.795)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_54"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_4.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (254.76149, 2503.968)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "numWaves_5"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-494.82217, 2137.6936)
            float2 ui:nodegraph:node:size = (167, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_32"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_3.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (404.0764, 1845.3286)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "d_4"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_24.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (218.52434, 1322.3044)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "center_6"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (-0.5, 0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-493.16324, 2555.217)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "center_7"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0.5, -0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-516.7051, 1482.45)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_51"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_7.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (825.3755, 2039.9398)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_34"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_6.outputs:out>
            float inputs:in2.connect = </Root/Water/d_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (406.79807, 2288.8723)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "t_3"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0
            float inputs:value.connect = </Root/Water/t_0.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-811.122, 1572.3807)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_24"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_5.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (73.343895, 1321.6948)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_30"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_4.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_40.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (403.41403, 1390.9896)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_11"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_3.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_7.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-375.05725, 1318.8116)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Divide_11"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_13.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (644.1739, 1566.4214)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Divide_7"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_19.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (676.3967, 1942.5868)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_10"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_2.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_5.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-347.17493, 2043.278)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "t_2"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0
            float inputs:value.connect = </Root/Water/t_0.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-783.2397, 2296.847)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_9"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_3.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_4.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-379.3977, 1667.1124)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_29"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_11.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (793.15265, 1663.7744)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_23"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_55.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_53.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (521.8269, 2514.992)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Magnitude_4"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_8.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-193.04478, 2391.636)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Divide_8"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_20.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (672.0562, 2290.8877)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_16"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_30.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_49.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (498.28506, 1442.2247)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "pos_3"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0, 0)
            float2 inputs:value.connect = </Root/Water/Subtract_12.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-816.8346, 1500.7885)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "numWaves_7"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-527.0449, 1761.5282)
            float2 ui:nodegraph:node:size = (167, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Sin_5"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_56.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (749.41724, 2168.8494)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Exp_5"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-40.049187, 1316.3802)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_55"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_6.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_54.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (426.95584, 2463.7568)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "d_6"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_17.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (242.06621, 2395.0715)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_41"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_34.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (493.17715, 2288.625)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_39"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_7.outputs:out>
            float inputs:in2.connect = </Root/Water/d_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (378.91574, 1564.406)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_20"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_41.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (583.94904, 2289.7654)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Add_19"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_38.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (588.28955, 1941.4646)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_43"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_8.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (821.035, 2388.2407)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Sin_4"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_45.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (745.0767, 2517.1501)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_44"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_7.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_50.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (399.07352, 1739.2905)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_36"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t_2.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (436.29922, 2221.4941)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_40"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_6.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (231.21962, 1431.201)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "d_5"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_21.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (246.40666, 2046.7708)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Sin_7"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_42.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (717.1944, 1792.684)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "numWaves_4"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-499.16263, 2485.9944)
            float2 ui:nodegraph:node:size = (167.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Exp_4"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-12.166862, 2040.8466)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_31"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_16.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (578.86523, 1448.6869)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "freq_7"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-503.03818, 2065.609)
            float2 ui:nodegraph:node:size = (126, 53)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Multiply_56"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_18.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (606.74756, 2173.153)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1771
        }

        def Shader "Subtract_12"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos_0.outputs:out>
            float2 inputs:in2 = (0, 0.01)
            float2 inputs:in2.connect = None
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-1159.1731, 1454.7715)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1895
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/Water/Subtract_6.outputs:out>
            float inputs:in2.connect = </Root/Water/Subtract_7.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1542.8054, 797.1316)
            float2 ui:nodegraph:node:size = (144.5, 53)
            int ui:nodegraph:node:stackingOrder = 1787
        }

        def Shader "Add_26"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_19.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_17.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (993.0184, 618.62866)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1909
        }

        def Shader "Add_27"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_33.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_29.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (935.26984, 1579.0059)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1915
        }

        def Shader "Add_28"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_51.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_43.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (959.32874, 2199.7546)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 1918
        }

        def Shader "Exp_1"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-13.83725, 162.47076)
            float2 ui:nodegraph:node:size = (119.5, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_6"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_13.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (586.6191, 63.088867)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_5"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_8.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_12.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (524.49695, 288.3153)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "pos"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0, 0)
            float2 inputs:value.connect = </Root/Water/Subtract_5.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-786.2822, -1.421875)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_10"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves_1.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (257.43155, 277.29156)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_1.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (500.18774, -286.35236)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (679.0668, -284.08972)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Sin_1"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_11.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (747.74677, 290.4737)
            float2 ui:nodegraph:node:size = (118, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "freq"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-500.3681, -161.06772)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "center"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (0.5, -0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-486.1527, -19.760315)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "freq_1"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 2.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-504.70856, 187.23315)
            float2 ui:nodegraph:node:size = (123.5, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Exp"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/Water/Magnitude.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-9.496796, -185.83008)
            float2 ui:nodegraph:node:size = (114.5, 40)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_25"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_7.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_9.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (985.3396, -39.64669)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (433.96643, -111.22064)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Magnitude"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-186.03426, -183.34131)
            float2 ui:nodegraph:node:size = (152, 40)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Subtract_2"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-348.8453, 164.90216)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_14"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_1.outputs:out>
            float inputs:in2.connect = </Root/Water/d_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (409.46814, 62.19574)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_3"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_3.outputs:out>
            float inputs:in2 = 1
            float inputs:in2.connect = </Root/Water/Multiply_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (528.83746, -59.985535)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_3.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (609.4176, -53.523376)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Magnitude_1"
        {
            uniform token info:id = "ND_magnitude_vector2"
            float2 inputs:in.connect = </Root/Water/Subtract_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-190.37473, 164.95953)
            float2 ui:nodegraph:node:size = (164.5, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_2"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Multiply_2.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (590.9596, -285.21198)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t.outputs:out>
            float inputs:in2.connect = </Root/Water/freq.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (438.9693, -5.182495)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "numWaves"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-492.1521, -88.98297)
            float2 ui:nodegraph:node:size = (152, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (103.896286, -180.51544)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide_1.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (823.705, 161.56415)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/numWaves.outputs:out>
            float inputs:in2 = -1
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (261.772, -71.00928)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_13"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Multiply_14.outputs:out>
            float inputs:in2 = 20
            float outputs:out
            float2 ui:nodegraph:node:pos = (495.84723, 61.948486)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "center_1"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (-0.5, 0.5)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-490.49316, 328.54053)
            float2 ui:nodegraph:node:size = (154, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Divide_1"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in2.connect = </Root/Water/Add_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (674.72626, 64.21112)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d.outputs:out>
            float inputs:in2.connect = </Root/Water/d.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (413.80865, -286.1051)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_11"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Add_5.outputs:out>
            float inputs:in2 = 6.283
            float outputs:out
            float2 ui:nodegraph:node:pos = (605.0771, 294.77747)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_12"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/t.outputs:out>
            float inputs:in2.connect = </Root/Water/freq_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (434.62878, 343.11835)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "d"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (249.07672, -179.90582)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/Water/pos.outputs:out>
            float2 inputs:in2.connect = </Root/Water/center.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-344.50488, -183.39868)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "d_1"
        {
            uniform token info:id = "ND_ln_float"
            float inputs:in.connect = </Root/Water/Add_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (244.73627, 168.39502)
            float2 ui:nodegraph:node:size = (139, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/d_1.outputs:out>
            float inputs:in2.connect = </Root/Water/Multiply_10.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (429.62592, 237.0802)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Add_4"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Water/Exp_1.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (99.55583, 167.7854)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "numWaves_1"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 10
            float outputs:out
            float2 ui:nodegraph:node:pos = (-496.49255, 259.31787)
            float2 ui:nodegraph:node:size = (164.5, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Multiply_7"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Water/Divide.outputs:out>
            float inputs:in2 = 6.283
            float inputs:in2.connect = </Root/Water/Sin.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (828.04553, -186.73672)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Water/Multiply_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (752.0873, -57.82715)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 2066
        }

        def Shader "t"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0
            float inputs:value.connect = </Root/Water/t_0.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-780.56964, 70.17047)
            float2 ui:nodegraph:node:size = (115, 53)
            int ui:nodegraph:node:stackingOrder = 2066
        }
    }

    def Material "Vista"
    {
        float inputs:a = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1127.9432, 614.3979)
                    int stackingOrderInSubgraph = 5027
                }
            }
        )
        float inputs:b = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1086.8041, 820.0983)
                    int stackingOrderInSubgraph = 5000
                }
            }
        )
        float inputs:density = -1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1359.3033, 442.19733)
                    int stackingOrderInSubgraph = 5026
                }
            }
        )
        float inputs:h = 0.8 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1588.2885, 1088.6328)
                    int stackingOrderInSubgraph = 5022
                }
            }
        )
        float inputs:s = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1588.4647, 1150.0088)
                    int stackingOrderInSubgraph = 5018
                }
            }
        )
        float inputs:speed = 0.8 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (839.2472, 434.79312)
                    int stackingOrderInSubgraph = 5000
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Vista/PBRSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:node:pos = (142.15924, 11.763443)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (2443.4968, 900.5484)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 4679

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1145.0353, 421.6503)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Vista/Position.outputs:out>
            float3 inputs:in2 = (2, 2, 2)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1261.1251, 416.3345)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector3"
            float3 inputs:in1.connect = </Root/Vista/Multiply.outputs:out>
            float3 inputs:in2 = (1, 1, 1)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1281.2543, 418.01807)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Separate3"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/Vista/Subtract.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (1471.0804, 523.1952)
            float2 ui:nodegraph:node:size = (115.5, 145)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Separate3.outputs:outy>
            float inputs:in2 = -1
            float inputs:in2.connect = </Root/Vista.inputs:density>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1524.5613, 449.63873)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4775
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
        }

        def Shader "DotProduct"
        {
            uniform token info:id = "ND_dotproduct_vector3"
            float3 inputs:in1.connect = </Root/Vista/Multiply_3.outputs:out>
            float3 inputs:in2.connect = </Root/Vista/Combine3_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2031.5742, 415.37994)
            float2 ui:nodegraph:node:size = (153.5, 53)
            int ui:nodegraph:node:stackingOrder = 4701
        }

        def Shader "Separate3_1"
        {
            uniform token info:id = "ND_separate3_vector3"
            float3 inputs:in.connect = </Root/Vista/Combine3_2.outputs:out>
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (1857.2076, 576.5903)
            float2 ui:nodegraph:node:size = (127.5, 145)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (801.3949, 285.32104)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 4997
        }

        def Shader "Combine3_2"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1.connect = </Root/Vista/Separate3.outputs:outx>
            float inputs:in2.connect = </Root/Vista/Multiply_1.outputs:out>
            float inputs:in3.connect = </Root/Vista/Separate3.outputs:outz>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1672.6072, 427.56918)
            float2 ui:nodegraph:node:size = (160, 54)
            int ui:nodegraph:node:stackingOrder = 4706
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Vista/Combine3_2.outputs:out>
            float3 inputs:in2.connect = </Root/Vista/Combine3_2.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1857.2076, 391.09024)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1.connect = </Root/Vista/Separate3_1.outputs:outx>
            float inputs:in2.connect = </Root/Vista/DotProduct.outputs:out>
            float inputs:in3.connect = </Root/Vista/Separate3_1.outputs:outz>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (2201.314, 654.13464)
            float2 ui:nodegraph:node:size = (145, 54)
            int ui:nodegraph:node:stackingOrder = 4704
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/DotProduct.outputs:out>
            float inputs:in2 = 1.7
            float outputs:out
            float2 ui:nodegraph:node:pos = (2201.314, 424.13464)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 3335
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Separate3_1.outputs:outx>
            float inputs:in2 = 6.6
            float outputs:out
            float2 ui:nodegraph:node:pos = (2047.7698, 716.4221)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4192
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1"]
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Multiply_4.outputs:out>
            float inputs:in2.connect = </Root/Vista/Multiply_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2422.564, 505.25964)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 3335
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Add.outputs:out>
            float inputs:in2.connect = </Root/Vista/Multiply_12.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2546.5195, 298.46802)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 2857
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Vista/Add_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2693.672, 274.20358)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 4015
        }

        def Shader "Add_2"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Sin.outputs:out>
            float inputs:in2 = 1.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (2894.623, 268.9547)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 5029
        }

        def Shader "Sin_1"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Vista/Multiply_12.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1273.295, 297.7203)
            float2 ui:nodegraph:node:size = (118, 53)
            int ui:nodegraph:node:stackingOrder = 4990
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Sin_1.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (1423.2911, 300.41718)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4993
        }

        def Shader "Add_3"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Multiply_5.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (1524.5613, 297.1387)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4192
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_float"
            float inputs:bg = 0.5
            float inputs:fg = 0.6
            float inputs:mix.connect = </Root/Vista/Add_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1672.6072, 245.0692)
            float2 ui:nodegraph:node:size = (109, 145)
            int ui:nodegraph:node:stackingOrder = 4711
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:bg"]
        }

        def Shader "Add_4"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/DotProduct.outputs:out>
            float inputs:in2.connect = </Root/Vista/Multiply_12.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2201.314, 248.13463)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 3335
        }

        def Shader "Sin_2"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Vista/Add_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2546.5195, 192.96802)
            float2 ui:nodegraph:node:size = (121.5, 53)
            int ui:nodegraph:node:stackingOrder = 2857
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Sin_2.outputs:out>
            float inputs:in2.connect = </Root/Vista/Add_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2542.8035, 591.53876)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4669
        }

        def Shader "Add_5"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Multiply_6.outputs:out>
            float inputs:in2.connect = </Root/Vista/Separate3_1.outputs:outx>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2719.5535, 623.53876)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4669
        }

        def Shader "Sin_3"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Vista/Add_5.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1146.1945, 752.9234)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 4830
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 2.13
            float inputs:in1.connect = </Root/Vista.inputs:a>
            float inputs:in2.connect = </Root/Vista/Sin_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1277.3837, 737.5508)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 4749
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1"]
        }

        def Shader "Absval"
        {
            uniform token info:id = "ND_absval_float"
            float inputs:in.connect = </Root/Vista/Divide.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1425.2521, 690.173)
            float2 ui:nodegraph:node:size = (121.5, 53)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Multiply_7"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Absval.outputs:out>
            float inputs:in2.connect = </Root/Vista/Mix.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1567.7496, 626.2132)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Constant"
        {
            uniform token info:id = "ND_constant_vector3"
            float3 inputs:value = (0.02, 0.03, 0.13)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1436.3834, 924.20764)
            float2 ui:nodegraph:node:size = (154.5, 53)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            float3 inputs:in1.connect = </Root/Vista/Constant.outputs:out>
            float inputs:in2.connect = </Root/Vista/Multiply_7.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1679.2184, 802.784)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_vector3_color3"
            float3 inputs:in.connect = </Root/Vista/Add_9.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1920.0854, 929.8558)
            float2 ui:nodegraph:node:size = (135.5, 40)
            int ui:nodegraph:node:stackingOrder = 4835
        }

        def Shader "Cos"
        {
            uniform token info:id = "ND_cos_float"
            float inputs:in.connect = </Root/Vista/Add_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2693.672, 376.20358)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 4015
        }

        def Shader "Add_6"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Add_4.outputs:out>
            float inputs:in2 = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (2422.564, 318.13464)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4803
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Add_2.outputs:out>
            float inputs:in2.connect = </Root/Vista/Cos.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2542.8035, 692.53876)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4669
        }

        def Shader "Add_7"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Multiply_9.outputs:out>
            float inputs:in2 = 0.25
            float outputs:out
            float2 ui:nodegraph:node:pos = (2719.5535, 719.53876)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4799
        }

        def Shader "Sin_4"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Vista/Add_8.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1152.369, 892.79)
            float2 ui:nodegraph:node:size = (121, 53)
            int ui:nodegraph:node:stackingOrder = 4830
        }

        def Shader "Add_8"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/Vista/Separate3_1.outputs:outx>
            float inputs:in2.connect = </Root/Vista/Add_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (2823.437, 755.52563)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4669
        }

        def Shader "Divide_1"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in1.connect = </Root/Vista.inputs:b>
            float inputs:in2.connect = </Root/Vista/Sin_4.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1286.0585, 877.41736)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 4749
        }

        def Shader "Absval_1"
        {
            uniform token info:id = "ND_absval_float"
            float inputs:in.connect = </Root/Vista/Divide_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1442.6769, 830.03955)
            float2 ui:nodegraph:node:size = (134, 53)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Multiply_10"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Mix.outputs:out>
            float inputs:in2.connect = </Root/Vista/Absval_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1563.2184, 789.8465)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 4571
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Constant_1"
        {
            uniform token info:id = "ND_constant_vector3"
            float3 inputs:value = (0.02, 0.1, 0.03)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1436.3834, 1039.2076)
            float2 ui:nodegraph:node:size = (154.5, 53)
            int ui:nodegraph:node:stackingOrder = 4571
        }

        def Shader "Multiply_11"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            float3 inputs:in1.connect = </Root/Vista/Constant_1.outputs:out>
            float inputs:in2.connect = </Root/Vista/Multiply_10.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1667.2416, 1005.5072)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 5020
        }

        def Shader "Add_9"
        {
            uniform token info:id = "ND_add_vector3"
            float3 inputs:in1.connect = </Root/Vista/Multiply_8.outputs:out>
            float3 inputs:in2.connect = </Root/Vista/Multiply_11.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1795.9686, 900.659)
            float2 ui:nodegraph:node:size = (61.5, 36.5)
            int ui:nodegraph:node:stackingOrder = 4599
        }

        def Shader "PBRSurface"
        {
            uniform token info:id = "ND_realitykit_pbr_surfaceshader"
            float inputs:ambientOcclusion
            color3f inputs:baseColor.connect = </Root/Vista/HSVAdjust.outputs:out>
            float inputs:clearcoat
            float3 inputs:clearcoatNormal
            float inputs:clearcoatRoughness
            color3f inputs:emissiveColor
            bool inputs:hasPremultipliedAlpha = 0
            float inputs:metallic
            float3 inputs:normal
            float inputs:opacity
            float inputs:opacityThreshold
            float inputs:roughness = 0.69
            float inputs:specular
            token outputs:out
            float2 ui:nodegraph:node:pos = (2214.5723, 923.87695)
            int ui:nodegraph:node:stackingOrder = 4713
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Scope "Group" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Group"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Divide_1", "p:Divide"]
        }

        def Scope "Group2" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Group"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Multiply_1"]
        }

        def Scope "Group3" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Group"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Add_2"]
        }

        def Shader "HSVAdjust"
        {
            uniform token info:id = "ND_hsvadjust_color3"
            float3 inputs:amount = (1.78, -0.04, 0.23)
            float3 inputs:amount.connect = </Root/Vista/Combine3_1.outputs:out>
            color3f inputs:in.connect = </Root/Vista/Convert.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1952.0209, 1017.2535)
            int ui:nodegraph:node:stackingOrder = 4907
        }

        def Shader "Multiply_12"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Vista/Time.outputs:out>
            float inputs:in2 = 0.4
            float inputs:in2.connect = </Root/Vista.inputs:speed>
            float outputs:out
            float2 ui:nodegraph:node:pos = (961.0747, 344.01477)
            int ui:nodegraph:node:stackingOrder = 4999
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Scope "Group4" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Group"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Multiply_12"]
        }

        def Shader "Combine3_1"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1.connect = </Root/Vista.inputs:h>
            float inputs:in2.connect = </Root/Vista.inputs:s>
            float inputs:in3.connect = </Root/Vista/ConstantFloat.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1778.1956, 1104.7605)
            int ui:nodegraph:node:stackingOrder = 5016
        }

        def Shader "ConstantFloat"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (1530.2695, 1222.5938)
            int ui:nodegraph:node:stackingOrder = 5024
        }
    }
}

